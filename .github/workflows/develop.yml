name: 开发环境

on:
  workflow_dispatch:
    inputs:
      productIcon:
        default: ''
        required: false
        description: '应用图标'
      productName:
        default: 'talkai'
        required: false
        description: '应用名称'
        
# 全局环境变量
env:
  BRANCH: product

jobs:
  build_macos:
    name: 编译应用(macOS)
    runs-on: macos-latest
    outputs:
      fileUrl: ${{ steps.upload.outputs.fileUrl }}
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3
        with:
          ref: ${{env.BRANCH}}

      - name: 配置环境
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 安装依赖
        run: npm install

      - name: 下载图标
        if: ${{ github.event.inputs.productIcon != '' }}
        run: |
          curl -f -o assets/icon.png ${{ github.event.inputs.productIcon }}

      - name: 编译应用
        run: npm run build
        env:
          PRODUCT_NAME: ${{ github.event.inputs.productName }}
      - run: ls -l release
      
      - name: 上传应用
        id: upload
        shell: bash
        run: |
          contentType=application/x-apple-diskimage
          
          response=$(curl -X POST https://api.panshu.com.cn/base/oss/upload_url -H "Content-Type: application/json" -d "{\"contentType\": \"$contentType\"}")
          
          fileUrl=$(echo "$response" | jq -r '.data.fileUrl')
          uploadUrl=$(echo "$response" | jq -r '.data.uploadUrl')

          echo $response
          echo ${response}
          
          echo ${fileUrl}
          echo ${uploadUrl}

          curl --location --request PUT "$uploadUrl" --header "Content-Type: $contentType" --data-binary @release/install.dmg
          echo "::set-output name=fileUrl::$fileUrl"
          
  build_windows:
    name: 编译应用(Windows)
    runs-on: windows-latest
    outputs:
      fileUrl: ${{ steps.upload.outputs.fileUrl }}
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3
        with:
          ref: ${{env.BRANCH}}

      - name: 配置环境
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 安装依赖
        run: npm install

      - name: 下载图标
        if: ${{ github.event.inputs.productIcon != '' }}
        run: |
          curl -f -o assets/icon.png ${{ github.event.inputs.productIcon }}

      - name: 编译应用
        run: npm run build
        env:
          PRODUCT_NAME: ${{ github.event.inputs.productName }}
      - run: ls -l release
      
      - name: 上传应用
        id: upload
        shell: bash
        run: |
          contentType=application/octet-stream
          
          response=$(curl -X POST https://api.panshu.com.cn/base/oss/upload_url -H "Content-Type: application/json" -d "{\"contentType\": \"$contentType\"}")
          
          fileUrl=$(echo "$response" | jq -r '.data.fileUrl')
          uploadUrl=$(echo "$response" | jq -r '.data.uploadUrl')

          echo $response
          echo ${response}
          
          echo ${fileUrl}
          echo ${uploadUrl}

          # curl --location --request PUT "$uploadUrl" --header "Content-Type: $contentType" --data-binary @release/install.exe
          
          echo "::set-output name=fileUrl::$fileUrl"
          
  post_build:
    name: 数据汇总
    runs-on: ubuntu-latest
    needs: [build_macos, build_windows] 
    steps:
      - name: 整理数据
        run: |
          echo ${{ needs.build_macos.outputs.fileUrl }}
          echo ${{ needs.build_windows.outputs.fileUrl }}

